volumes:
  postgres:
  n8n:
  postgresext:

services:
  postgres:
    container_name: postgres-db
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}' ]
      interval: 5s
      timeout: 5s
      retries: 10

  n8n:
    container_name: n8n-server
    image: docker.n8n.io/n8nio/n8n:latest
    restart: always
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_USER=${POSTGRES_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
      - GENERIC_TIMEZONE="Asia/Jakarta"
      - TZ="Asia/Jakarta"
      - N8N_EDITOR_BASE_URL=${BASE_URL_N8N}
      - N8N_ENCRYPTION_KEY
      - VUE_APP_URL_BASE_API=${BASE_URL_N8N}
      - WEBHOOK_URL=${BASE_URL_N8N}
    ports:
      - 5678:5678
    links:
      - postgres
    volumes:
      - n8n:/home/node/.n8n
      - './.n8n_ext_files:/home/n8n_ext_files'
    depends_on:
      postgres:
        condition: service_healthy
    extra_hosts:
      - "host.docker.internal:host-gateway"

  postgresext:
    container_name: postgres-ext-db
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER_EXT}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD_EXT}
      - POSTGRES_DB=${POSTGRES_DB_EXT}
    ports:
      - 5433:5432
    volumes:
      - postgresext:/var/lib/postgresql/data
      - ./init-data-ext.sh:/docker-entrypoint-initdb.d/init-data.sh
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER_EXT} -d ${POSTGRES_DB_EXT}' ]
      interval: 5s
      timeout: 5s
      retries: 10